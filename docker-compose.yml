version: '3.8'
services:
  task-manager:
    build: .
    ports:
      - '2300:2300'
    environment:
      NODE_ENV: production
      DB_USER: ${DB_USER}
      DB_PORT: 5432
      DB_DATABASE: taskdb
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: postgres
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      BACKEND_URL: http://localhost:2300
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    container_name: postgres
    ports:
      - '5435:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: taskdb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  test:
    build: .
    container_name: task_management_api_test
    environment:
      DB_USER: ${DB_USER}
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: postgres
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      BACKEND_URL: http://localhost:2300
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
    depends_on:
      db:
        condition: service_healthy
    command: ["npm", "test"]
