{
    "openapi": "3.0.0",
    "info": {
        "title": "Task Management API",
        "version": "1.0.0",
        "description": "API Documentation for Task Management"
    },
    "servers": [
        {
            "url": "http://localhost:2300",
            "description": "Development Server"
        }
    ],
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "12345"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    }
                }
            },
            "Task": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "12345"
                    },
                    "title": {
                        "type": "string",
                        "example": "Task Title"
                    },
                    "description": {
                        "type": "string",
                        "example": "Task Description"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-12-31"
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    }
                }
            }
        },
        "responses": {
            "UnauthorizedError": {
                "description": "Authentication information is missing or invalid",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized"
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "paths": {
        "/api/v1/auth/sign-up": {
            "post": {
                "tags": ["Auth"],
                "summary": "Register A User",
                "description": "This endpoint allows a new user to register by providing their details such as name (optional), email, and password. The user will receive a confirmation email upon successful registration.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "john_doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "success": true,
                                                "message": "User signed up successfully, an email has been sent to your email address to get verified!",
                                                "data": null
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/sign-in": {
            "post": {
                "tags": ["Auth"],
                "summary": "Login A User",
                "description": "This endpoint allows a user to log in by providing their email and password. Upon successful login, the user will receive an authentication token and a refresh token as cookie. \nn NOTE:\n Password must be 8-12 characters long and contain at least one lowercase letter, one uppercase letter, one number and one special character!",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "headers":{
                            "Set-Cookie":{
                                "description":"Refresh token cookie",
                                "schema":{
                                    "type":"string",
                                    "example":"refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User logged in successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid email or password"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh-token":{
            "get":{
                "tags":["Auth"],
                "summary":"Refresh User Token",
                "description":"This endpoint allows a user to refresh their authentication token using a refresh token stored in cookies.",
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "cookie",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "description": "Refresh token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "headers": {
                            "Set-Cookie": {
                                "description": "New refresh token cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/verify-email/{token}":{
            "get":{
                "tags":["Auth"],
                "summary":"Verify Email",
                "description":"This is the endpoint in the user's email that verifies a user's email address using a token sent them.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "description": "Verification token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/get-reset-password-otp":{
            "post":{
                "tags":["Auth"],
                "summary":"Get Reset Password OTP",
                "description":"This endpoint allows a user to request a One-Time Password (OTP) to reset their password. The OTP will be sent to the user's registered email address.",
                "requestBody":{
                    "required":true,
                    "content":{
                        "application/json":{
                            "schema":{
                                "type":"object",
                                "properties":{
                                    "email":{
                                        "type":"string",
                                        "example":"tester@tester.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid email address",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid email address"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reset-password":{
            "put":{
                "tags":["Auth"],
                "summary":"Reset Password",
                "description":"This endpoint allows a user to reset their password using a One-Time Password (OTP) sent to their email.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "newPassword123"
                                    }
                                },
                                "required": ["email", "otp", "new_password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/log-out":{
            "tags": ["Auth"],
            "summary": "Log Out A User",
            "description": "This endpoint allows a user to log out by clearing the authentication and refresh tokens stored in cookies.",
            "responses": {
                "200": {
                    "description": "User logged out successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "success": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "User logged out successfully"
                                    },
                                    "data": {
                                        "type": "null",
                                        "example": null
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "success": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Unauthorized"
                                    },
                                    "data": {
                                        "type": "null",
                                        "example": null
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tasks": {
            "get": {
                "tags": ["Tasks","Admin"],
                "summary": "Get All Tasks",
                "description": "This endpoint retrieves all tasks with optional filters for status, start_date, end_date, and pagination. Only the admin and managers can access this endpoint!",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "pending"
                        },
                        "required": false,
                        "description": "Filter tasks by status"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        },
                        "required": false,
                        "description": "Filter tasks by start date"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        },
                        "required": false,
                        "description": "Filter tasks by end date"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "created_at"
                        },
                        "required": false,
                        "description": "Sort tasks by a specific field"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "DESC"
                        },
                        "required": false,
                        "description": "Sort order (ASC or DESC)"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": false,
                        "description": "Page number for pagination"
                    }
                ],
                "security":[
                    {
                        "BearerAuth":[]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tasks fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "totalTask": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "totalPage": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Tasks"],
                "summary": "Create A Task",
                "description": "This endpoint allows a user to create a new task by providing the task details. description and due_date are optional",
                "security":[
                    {
                        "BearerAuth":[]
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Task Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Task Description"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-31"
                                    }
                                },
                                "required": ["title"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/user": {
            "get": {
                "tags": ["Tasks","Admin"],
                "summary": "Get A User Tasks",
                "description": "This endpoint retrieves all tasks that belong to an authorized user with optional filters for status, start_date, end_date, and pagination. Only the admin and managers can access this endpoint!",
                "security":[
                    {
                        "BearerAuth":[]
                    }
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "pending"
                        },
                        "required": false,
                        "description": "Filter tasks by status"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        },
                        "required": false,
                        "description": "Filter tasks by start date"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        },
                        "required": false,
                        "description": "Filter tasks by end date"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "created_at"
                        },
                        "required": false,
                        "description": "Sort tasks by a specific field"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "DESC"
                        },
                        "required": false,
                        "description": "Sort order (ASC or DESC)"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": false,
                        "description": "Page number for pagination"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tasks fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "totalTask": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "totalPage": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied!"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/{taskId}": {
            "get": {
                "tags": ["Tasks"],
                "summary": "Get A Task",
                "description": "This endpoint retrieves a specific task by its ID. user can get their Task, while Admin and Manager can get any task",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "12345"
                        },
                        "description": "ID of the task to retrieve"
                    }
                ],
                "security":[
                    {
                        "BearerAuth":[]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task fetched successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied!"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Tasks","Admin"],
                "summary": "Update A Task",
                "description": "This endpoint allows a user, admin and manager to update an existing task by providing the updated task details.",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "12345"
                        },
                        "description": "ID of the task to update"
                    }
                ],
                "security":[
                    {
                        "BearerAuth":[]
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Task Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated Task Description"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-31"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "completed"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied!"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Tasks","Admin"],
                "summary": "Delete A Task",
                "description": "This endpoint allows a user or admin to delete a specific task by its ID.",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "12345"
                        },
                        "description": "ID of the task to delete"
                    }
                ],
                "security":[
                    {
                        "BearerAuth":[]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted successfully"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied!"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}